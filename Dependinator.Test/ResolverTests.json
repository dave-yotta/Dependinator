[
  {
    "Name": "Baseline",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour":  [1, null],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"], [[],   [],  false, "Failed"]],
          [[[4], [5], false, "Resolved" ]],
          [[[],  [6], false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [], false, "Resolving"]],
          [[[],  [], false, "Resolved" ]],
          [[[],  [], false, "Completed"]]
        ]
      },
      {
        "Id": 3,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[3], [], false, "Resolving"]],
          [[[],  [], false, "Resolved" ]],
          [[[],  [], false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2,3], [1,2,3], [1]]
  },
  {
    "Name": "Self Dependant",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [1], false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1], [1]]
  },
  {
    "Name": "Begin Dependant",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [1], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1], [2], [1,2]]
  },
  {
    "Name": "Become Dependant",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [],  false, "Resolving"]],
          [[[],  [1], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2], [1], [2], [1,2]]
  },
  {
    "Name": "Become Dependant NonBlocking",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [],  false, "Resolving"]],
          [[[],  [1], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2], [2], [1,2]]
  },
  {
    "Name": "Begin Co-Dependant",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [2], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [1], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1], [1], [2], [2]]
  },
  {
    "Name": "Begin Co-Dependant, 2-step resolve",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [2], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [1], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1], [1], [1], [2], [2], [2]]
  },
  {
    "Name": "Become Co-Dependant 1-way",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [2], false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [1], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1], [2], [1,2]]
  },
  {
    "Name": "Become Co-Dependant 2-way",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [2], false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [],  false, "Resolving"]],
          [[[],  [1], false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2], [1,2]]
  },
  {
    "Name": "Become Co-Dependant 2-way 2-stage",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [2], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [],  false, "Resolving"]],
          [[[],  [1], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2], [1], [1], [2], [2]]
  },
  {
    "Name": "Become Co-Dependant 3-way 2-stage",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [2], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [],  false, "Resolving"]],
          [[[],  [3], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 3,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[3], [],  false, "Resolving"]],
          [[[],  [1], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2,3], [1,3], [1,3], [2], [2]]
  },
  {
    "Name": "Become Co-Dependant 3-way 3-stage",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [2], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [],  false, "Resolving"]],
          [[[],  [3], false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 3,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[3], [],  false, "Resolving"]],
          [[[],  [1], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2,3], [1,3], [3], [3], [1], [1], [2], [2]]
  },
  {
    "Name": "Become Co-Dependant 2-way out of sync",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [2], false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving" ]],
          [[[],  [1], false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2], [2], [1,2]]
  },
  {
    "Name": "Dependency appears due to target appearing",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[4], [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [4], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2], [1,2], [1], [1,2]]
  },
  {
    "Name": "Dual edit",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [1], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[1], [1], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1], [1], [1], [2], [2], [2]]
  },
  {
    "Name": "Wrong picture of a target",
    "Arrange": 
    [
      {
        "Id": 1,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[],  [],  false, "Resolving"]],
          [[[1], [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 2,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[1], [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      },
      {
        "Id": 3,
        "ResetBehaviour": [0],
        "Evolution": 
        [
          [[[2], [1], false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolving"]],
          [[[],  [],  false, "Resolved" ]],
          [[[],  [],  false, "Completed"]]
        ]
      }
    ],
    "Assert": [[1,2,3], [2,3], [2,3], [3], [3], [3], [1,2], [1,2]]
  }
  /* Resetting one after resolve, that leads to a different state path, taking targets on Resolved/Done states (that now must be reset!) */
  /* Take a dependency which another state then declares it as it's target */
  /* Reset should allow the strategy to mutate it's states list e.g. "no, i'll not reset, i'll just have this as a failure" */
  /* Take an unbounded dependency after resolving - and have something fail */
  /* Take any unbounded dependency before resolving - we throw an exception becuase it's not supported (It can only be done synchronously) */
  /* Taking a dependency on unresolved state by targets appearing only resets the dependants, not the new source that just appeared */
  /* What the hell happens if two states target the same node T? */
  /* Check it supports 1000 20ms tasks at low overhead, i guess. */
  /* Check when resetting that it doesnt take the state as "started" i.e. during co-dependency */
  /* get dependency on unresolved state, forcing the unsolved state to freeze, then reset the source */
  /* unbound dependencies and related freezing */
]